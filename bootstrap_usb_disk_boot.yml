- name: Bootstrap and switch to USB disk boot
  hosts: all
  tasks:
    - name: Install parted package
      ansible.builtin.apt:
        name: parted
        state: present
        update_cache: true

    - name: Get partition information of USB disk
      community.general.parted:
        device: /dev/sda
        unit: MiB
      register: sda_info

    - name: Remove all partitions from disk
      community.general.parted:
        device: /dev/sda
        number: "{{ item.num }}"
        state: absent
      loop: "{{ sda_info.partitions }}"

    - name: Create primary partition
      community.general.parted:
        device: /dev/sda
        number: 1
        state: present
        fs_type: ext4

    - name: Create ext4 filesystem on partition
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sda1
        state: present
        force: true

    - name: Mount USB disk
      ansible.posix.mount:
        state: mounted
        src: /dev/sda1
        path: /mnt/usbdisk
        fstype: ext4

    - name: Get Raspberry Pi OS image archive
      ansible.builtin.find:
        paths: /var/tmp
        patterns: "*.xz"
      register: raspberry_pi_os_image_archive

    - name: Unarchive Raspberry Pi OS image archive
      ansible.builtin.command:
        cmd: "xz --decompress {{ raspberry_pi_os_image_archive.files[0].path }}"
      changed_when: false

    - name: Get Raspberry Pi OS image file
      ansible.builtin.find:
        paths: /var/tmp
        patterns: "*.img"
      register: raspberry_pi_os_image_file

    - name: Set up loop device
      ansible.builtin.command:
        cmd: "losetup --show --find --read-only --partscan /var/tmp/{{ raspberry_pi_os_image_file.files[0].path | basename }}"
      changed_when: false
      register: loop_device

    - name: Mount loop device
      ansible.posix.mount:
        state: mounted
        src: "{{ loop_device.stdout }}p2"
        path: /mnt/raspios
        fstype: ext4

    - name: Install sshpass package
      ansible.builtin.apt:
        name: sshpass
        state: present
        update_cache: true

    - name: Copy root filesystem to USB disk
      ansible.posix.synchronize:
        src: /mnt/raspios/
        dest: /mnt/usbdisk
      delegate_to: "{{ inventory_hostname }}"
      no_log: true

    - name: Umount loop device
      ansible.posix.mount:
        state: absent
        path: /mnt/raspios

    - name: Detach all loop devices
      ansible.builtin.command:
        cmd: losetup --detach-all
      changed_when: false

    - name: Adopt current hostname file
      ansible.builtin.copy:
        src: /etc/hostname
        dest: /mnt/usbdisk/etc/hostname
        remote_src: true
        owner: root
        group: root
        mode: preserve

    - name: Adopt current hosts file
      ansible.builtin.copy:
        src: /etc/hosts
        dest: /mnt/usbdisk/etc/hosts
        remote_src: true
        owner: root
        group: root
        mode: preserve

    - name: Adopt current GitOps scripts
      ansible.builtin.copy:
        src: "/usr/local/bin/{{ item }}"
        dest: "/mnt/usbdisk/usr/local/bin/{{ item }}"
        remote_src: true
        owner: root
        group: root
        mode: preserve
      loop:
        - gitops-bootstrap.sh
        - gitops-preparation.sh
        - gitops-rollout.sh
        - gitops-utils.sh

    - name: Adopt current Ansible GitOps boostrap systemd service
      ansible.builtin.copy:
        src: /etc/systemd/system/gitops-bootstrap.service
        dest: /mnt/usbdisk/etc/systemd/system/gitops-bootstrap.service
        remote_src: true
        owner: root
        group: root
        mode: preserve

    - name: Enable adopted Ansible GitOps boostrap systemd service on boot
      ansible.builtin.file:
        src: /etc/systemd/system/gitops-bootstrap.service
        dest: /mnt/usbdisk/etc/systemd/system/multi-user.target.wants/gitops-bootstrap.service
        state: link
        owner: root
        group: root

    - name: Remove maker file from GitOps preparation script
      ansible.builtin.file:
        path: /boot/firmware/gitops-preparation.done
        state: absent

    - name: Create Ansible GitOps rollout cron job
      ansible.builtin.cron:
        name: Ansible GitOps rollout
        minute: "*/10"
        user: root
        job: flock --nonblock /var/lock/gitops-rollout.lock /usr/local/bin/gitops-rollout.sh
        cron_file: /mnt/usbdisk/etc/crontab

    - name: Regather facts
      ansible.builtin.setup:
        gather_subset: all

    - name: Configure boot/firmware partition
      ansible.posix.mount:
        state: present
        src: "UUID={{ ansible_facts.devices['mmcblk0'].partitions['mmcblk0p1'].uuid }}"
        path: /boot/firmware
        fstype: vfat
        opts: defaults
        dump: 0
        passno: 2
        fstab: /mnt/usbdisk/etc/fstab

    - name: Configure root partition
      ansible.posix.mount:
        state: present
        src: "UUID={{ ansible_facts.devices['sda'].partitions['sda1'].uuid }}"
        path: /
        fstype: ext4
        opts: defaults,noatime
        dump: 0
        passno: 1
        fstab: /mnt/usbdisk/etc/fstab

    - name: Umount USB disk
      ansible.posix.mount:
        state: absent
        path: /mnt/usbdisk

    - name: Get PARTUUID of USB disk
      ansible.builtin.command:
        cmd: blkid /dev/sda1 --match-tag PARTUUID --output value
      changed_when: false
      register: usbdisk_partuuid

    - name: Switch to USB disk root partition
      ansible.builtin.replace:
        path: /boot/firmware/cmdline.txt
        regexp: "root=PARTUUID=[-a-z0-9]* "
        replace: "root=PARTUUID={{ usbdisk_partuuid.stdout }} "

    - name: Activate SSHD on boot
      ansible.builtin.file:
        path: /boot/firmware/ssh.txt
        state: touch
        owner: root
        group: root
        mode: "0755"

    - name: Add default user pi with password raspberry
      ansible.builtin.copy:
        content: "pi:$6$MVEGdHTqed7c7za0$ESdhSXBIjSTVWKY7YWBII3UjQM6LhFur1alIXWJ9/Hf4mxgZqIuyX1yEsVf/qct4/sT0NStmvIPZs5de3SNNy0"
        dest: /boot/firmware/userconf.txt
        owner: root
        group: root
        mode: "0755"
